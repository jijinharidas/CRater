[{"/home/jijinkh/Projects/CRater/frontend/src/components/Home/CourseCard.js":"1","/home/jijinkh/Projects/CRater/frontend/src/App.js":"2","/home/jijinkh/Projects/CRater/frontend/src/components/Home/RatingCard.js":"3","/home/jijinkh/Projects/CRater/frontend/src/localStorage.js":"4","/home/jijinkh/Projects/CRater/frontend/src/components/Accounts/Login.js":"5","/home/jijinkh/Projects/CRater/frontend/src/components/Accounts/AccountsPage.js":"6","/home/jijinkh/Projects/CRater/frontend/src/reportWebVitals.js":"7","/home/jijinkh/Projects/CRater/frontend/src/components/Accounts/Register.js":"8","/home/jijinkh/Projects/CRater/frontend/src/components/Home/HomePage.js":"9","/home/jijinkh/Projects/CRater/frontend/src/index.js":"10","/home/jijinkh/Projects/CRater/frontend/src/components/Navbar/Navbar.js":"11","/home/jijinkh/Projects/CRater/frontend/src/Creds.js":"12"},{"size":2560,"mtime":1609150019164,"results":"13","hashOfConfig":"14"},{"size":897,"mtime":1609156762131,"results":"15","hashOfConfig":"14"},{"size":3793,"mtime":1609159306071,"results":"16","hashOfConfig":"14"},{"size":1017,"mtime":1608441962142,"results":"17","hashOfConfig":"14"},{"size":2795,"mtime":1609053625106,"results":"18","hashOfConfig":"14"},{"size":1301,"mtime":1609053395466,"results":"19","hashOfConfig":"14"},{"size":362,"mtime":1607171483116,"results":"20","hashOfConfig":"14"},{"size":4664,"mtime":1609054123856,"results":"21","hashOfConfig":"14"},{"size":1524,"mtime":1609158651731,"results":"22","hashOfConfig":"14"},{"size":595,"mtime":1607666334632,"results":"23","hashOfConfig":"14"},{"size":2156,"mtime":1609045872535,"results":"24","hashOfConfig":"14"},{"size":43,"mtime":1608785329155,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"8bp8xf",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/home/jijinkh/Projects/CRater/frontend/src/components/Home/CourseCard.js",[],["59","60"],"/home/jijinkh/Projects/CRater/frontend/src/App.js",["61"],"import Home from \"./components/Accounts/AccountsPage\";\nimport HomePage from \"./components/Home/HomePage\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { loadLoggedin } from \"./localStorage\";\n// optional cofiguration\nimport { positions, Provider as AlertProvider } from \"react-alert\";\nimport AlertMUITemplate from \"react-alert-template-mui\";\n\nconst options = {\n  position: positions.MIDDLE,\n};\n\nfunction App() {\n  const loggedIn = loadLoggedin();\n  return (\n    <AlertProvider template={AlertMUITemplate} {...options}>\n      <div className=\"App\" style={{ backgroundColor: \"#100E17\" }}>\n        <Router>\n          <Route path=\"/\" exact component={HomePage} />\n          <Route\n            path=\"/account\"\n            component={loggedIn === \"loggedIn\" ? HomePage : Home}\n          />\n        </Router>\n      </div>\n    </AlertProvider>\n  );\n}\n\nexport default App;\n",["62","63"],"/home/jijinkh/Projects/CRater/frontend/src/components/Home/RatingCard.js",[],"/home/jijinkh/Projects/CRater/frontend/src/localStorage.js",[],["64","65"],"/home/jijinkh/Projects/CRater/frontend/src/components/Accounts/Login.js",[],"/home/jijinkh/Projects/CRater/frontend/src/components/Accounts/AccountsPage.js",["66"],"import React from \"react\";\nimport Login from './Login';\nimport Register from './Register';\nimport { Grid } from '@material-ui/core';\nimport Navbar from '../Navbar/Navbar';\nimport { url } from '../../Creds'\nimport Illustration from '../../assets/Illustration.png';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isLoginPage: true };\n  }\n  changeStatus = () => {\n    this.setState({ isLoginPage: !this.state.isLoginPage });\n  };\n  getComponent = () => {\n    if (this.state.isLoginPage) {\n      return <Login url={url} change={this.changeStatus} />;\n    }\n    return <Register url={url} change={this.changeStatus} />;\n  }\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <Grid container style={{ minHeight: '100vh' }}>\n          <Grid\n            item\n            xs={12}\n            sm={6}\n            alignItems=\"column\"\n            direction=\"column\"\n            justify=\"space-between\"\n            style={{ backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\" }}\n          >\n            <div />\n            {this.getComponent()}\n            <div />\n            <div />\n          </Grid>\n          <Grid sm={6}>\n            <img src={Illustration} />\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default Home;\n","/home/jijinkh/Projects/CRater/frontend/src/reportWebVitals.js",[],["67","68"],"/home/jijinkh/Projects/CRater/frontend/src/components/Accounts/Register.js",["69"],"import { TextField, Button, Grid } from \"@material-ui/core/\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport '../../App.css';\nimport '../../styles/Accounts.css';\n\nconst checkRegisterForm = (\n    username,\n    password,\n    firstName,\n    lastName,\n    rePassword\n) => {\n    if (\n        password === rePassword &&\n        username.length > 0 &&\n        password.length > 0 &&\n        firstName.length > 0 &&\n        lastName.length > 0\n    ) {\n        return null;\n    }\n    return \"disabled\";\n};\n\n\nconst Register = (props) => {\n    const [username, changeUsername] = useState(\"\");\n    const [password, changePassword] = useState(\"\");\n    const [firstName, changeFirstname] = useState(\"\");\n    const [lastName, changeLastname] = useState(\"\");\n    const [rePassword, changeRePassword] = useState(\"\");\n    const [emailID, changeEmailID] = useState(\"\");\n\n    return (\n        <Grid\n            container\n            alignItems=\"center\"\n            direction=\"column\"\n            justify=\"space-between\"\n            style={{ padding: 10 }}\n        >\n            <div className=\"accountsContainer\">\n                <label style={{ color: '#F2C94C' }} for=\"username\"> Username</label>\n                <TextField\n                    value={username}\n                    onChange={(e) => changeUsername(e.target.value)}\n\n                    id=\"username\"\n                    required\n                />\n                <div style={{ height: 20 }} />\n                <label style={{ color: '#F2C94C' }} for=\"emailID\">Email</label>\n                <TextField\n                    value={emailID}\n                    onChange={(e) => changeEmailID(e.target.value)}\n                    id=\"emailID\"\n                    required\n                />\n                <div style={{ height: 20 }} />\n                <label style={{ color: '#F2C94C' }} for=\"firstName\">First Name</label>\n                <TextField\n                    value={firstName}\n                    onChange={(e) => changeFirstname(e.target.value)}\n\n                    id=\"firstName\"\n                    required\n                />\n                <div style={{ height: 20 }} />\n                <label style={{ color: '#F2C94C' }} for=\"lastName\">Last Name</label>\n                <TextField\n                    value={lastName}\n                    onChange={(e) => changeLastname(e.target.value)}\n                    id=\"lastName\"\n                    required\n                />\n                <div style={{ height: 20 }} />\n                <label style={{ color: '#F2C94C' }} for=\"password\">Password</label>\n                <TextField\n                    value={password}\n                    onChange={(e) => changePassword(e.target.value)}\n                    type=\"password\"\n                    id=\"password\"\n                    required\n                />\n                <div style={{ height: 20 }} />\n                <label style={{ color: '#F2C94C' }} for=\"repassword\">Password Again</label>\n                <TextField\n                    value={rePassword}\n                    onChange={(e) => changeRePassword(e.target.value)}\n                    type=\"password\"\n                    id=\"repassword\"\n                    required\n                />\n                <div style={{ height: 20 }} />\n                <Button\n                    style={{ marginTop: \"1.5vh\", cursor: \"pointer\" }}\n                    className=\"loginButton\"\n                    disabled={checkRegisterForm(\n                        username,\n                        password,\n                        firstName,\n                        lastName,\n                        rePassword\n                    )}\n                    onClick={() => {\n                        let status = false;\n                        const req = {};\n                        req[\"username\"] = username;\n                        req[\"password\"] = password;\n                        req[\"firstname\"] = firstName;\n                        req[\"lastname\"] = lastName;\n                        req[\"email\"] = emailID;\n                        axios.post(`${props.url}/users/api/auth/register`, req)\n                            .then((response) => {\n                                props.change();\n                            })\n                            .catch((err) => console.log(err));\n                    }}\n                >\n                    Register\n                </Button>\n                <div style={{ height: 20 }} />\n                <Button style={{ color: \"#F2C94C\" }} onClick={props.change}>\n                    Login?\n                </Button>\n            </div>\n        </Grid>\n\n    );\n};\n\nexport default Register;","/home/jijinkh/Projects/CRater/frontend/src/components/Home/HomePage.js",[],"/home/jijinkh/Projects/CRater/frontend/src/index.js",[],"/home/jijinkh/Projects/CRater/frontend/src/components/Navbar/Navbar.js",["70","71"],"// import Grid from \"@material-ui/core/Grid\";\n// import Card from \"@material-ui/core/Card\";\n// import CardContent from \"@material-ui/core/CardContent\";\nimport React from \"react\";\n// import axios from \"axios\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { loadState, loadLoggedin, saveLoggedin } from \"../../localStorage\";\nimport { url } from \"../../Creds\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    fontFamily: \"Futura Md BT\",\n  },\n}));\n\nconst checkLoggedin = () => {\n  let x = loadLoggedin();\n  console.log(x);\n  if (x === \"loggedIn\") {\n    return true;\n  }\n  return false;\n};\n\nconst logout = () => {\n  const token = loadState(\"token\");\n  const config = {\n    headers: { Authorization: `Token ${token}` },\n  };\n  console.log(config);\n  saveLoggedin(\"notLoggedIn\");\n  axios\n    .post(`${url}/users/api/auth/logout`, null, config)\n    .then(() => window.location.reload())\n    .catch((err) => console.log(err)); // error 400\n};\n\nconst Navbar = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"static\"\n        style={{ background: \"transparent\", backgroundColor: \"#211D2C\" }}\n      >\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\">\n            <a href=\"/\">\n              <Button color=\"inherit\">C-Rater</Button>\n            </a>\n          </Typography>\n          {checkLoggedin() ? (\n            <Button onClick={logout} color=\"inherit\">\n              Logout\n            </Button>\n          ) : (\n            <a href=\"/account\">\n              <Button color=\"inherit\">Login</Button>\n            </a>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/home/jijinkh/Projects/CRater/frontend/src/Creds.js",[],["72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":3,"column":42,"nodeType":"80","messageId":"81","endLine":3,"endColumn":46},{"ruleId":"74","replacedBy":"82"},{"ruleId":"76","replacedBy":"83"},{"ruleId":"74","replacedBy":"84"},{"ruleId":"76","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":43,"column":13,"nodeType":"88","endLine":43,"endColumn":39},{"ruleId":"74","replacedBy":"89"},{"ruleId":"76","replacedBy":"90"},{"ruleId":"78","severity":1,"message":"91","line":107,"column":29,"nodeType":"80","messageId":"81","endLine":107,"endColumn":35},{"ruleId":"78","severity":1,"message":"92","line":10,"column":8,"nodeType":"80","messageId":"81","endLine":10,"endColumn":18},{"ruleId":"78","severity":1,"message":"93","line":11,"column":8,"nodeType":"80","messageId":"81","endLine":11,"endColumn":16},{"ruleId":"74","replacedBy":"94"},{"ruleId":"76","replacedBy":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["96"],["97"],["96"],["97"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["96"],["97"],"'status' is assigned a value but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.",["96"],["97"],"no-global-assign","no-unsafe-negation"]
[{"/home/jijinkh/Projects/CRater/frontend/src/components/Home/CourseCard.js":"1","/home/jijinkh/Projects/CRater/frontend/src/App.js":"2","/home/jijinkh/Projects/CRater/frontend/src/components/Home/RatingCard.js":"3","/home/jijinkh/Projects/CRater/frontend/src/localStorage.js":"4","/home/jijinkh/Projects/CRater/frontend/src/components/Accounts/Login.js":"5","/home/jijinkh/Projects/CRater/frontend/src/components/Accounts/AccountsPage.js":"6","/home/jijinkh/Projects/CRater/frontend/src/reportWebVitals.js":"7","/home/jijinkh/Projects/CRater/frontend/src/components/Accounts/Register.js":"8","/home/jijinkh/Projects/CRater/frontend/src/components/Home/HomePage.js":"9","/home/jijinkh/Projects/CRater/frontend/src/index.js":"10","/home/jijinkh/Projects/CRater/frontend/src/components/Navbar/Navbar.js":"11","/home/jijinkh/Projects/CRater/frontend/src/Creds.js":"12"},{"size":2734,"mtime":1608799903449,"results":"13","hashOfConfig":"14"},{"size":579,"mtime":1608730357656,"results":"15","hashOfConfig":"14"},{"size":4121,"mtime":1608799830523,"results":"16","hashOfConfig":"14"},{"size":1017,"mtime":1608441962142,"results":"17","hashOfConfig":"14"},{"size":3033,"mtime":1608730555119,"results":"18","hashOfConfig":"14"},{"size":1185,"mtime":1608792713832,"results":"19","hashOfConfig":"14"},{"size":362,"mtime":1607171483116,"results":"20","hashOfConfig":"14"},{"size":5364,"mtime":1607922828251,"results":"21","hashOfConfig":"14"},{"size":1581,"mtime":1608792671332,"results":"22","hashOfConfig":"14"},{"size":595,"mtime":1607666334632,"results":"23","hashOfConfig":"14"},{"size":2107,"mtime":1608793203006,"results":"24","hashOfConfig":"14"},{"size":43,"mtime":1608785329155,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8bp8xf",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jijinkh/Projects/CRater/frontend/src/components/Home/CourseCard.js",[],"/home/jijinkh/Projects/CRater/frontend/src/App.js",["54"],"import Home from \"./components/Accounts/AccountsPage\";\nimport HomePage from \"./components/Home/HomePage\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { loadLoggedin } from './localStorage';\nfunction App() {\n  const loggedIn = loadLoggedin()\n  return (\n    <div\n      className=\"App\"\n      style={{ backgroundColor: \"#ffffff\" }}>\n      <Router>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/account\" component={(loggedIn === 'loggedIn') ? HomePage : Home} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n",["55","56"],"/home/jijinkh/Projects/CRater/frontend/src/components/Home/RatingCard.js",["57"],"/home/jijinkh/Projects/CRater/frontend/src/localStorage.js",[],["58","59"],"/home/jijinkh/Projects/CRater/frontend/src/components/Accounts/Login.js",[],"/home/jijinkh/Projects/CRater/frontend/src/components/Accounts/AccountsPage.js",[],"/home/jijinkh/Projects/CRater/frontend/src/reportWebVitals.js",[],"/home/jijinkh/Projects/CRater/frontend/src/components/Accounts/Register.js",["60"],"import { TextField, Button, Grid, InputAdornment } from \"@material-ui/core/\";\nimport { AccountCircle, LockRounded, MailRounded } from \"@material-ui/icons/\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\n\nconst checkRegisterForm = (\n    username,\n    password,\n    firstName,\n    lastName,\n    rePassword\n) => {\n    if (\n        password === rePassword &&\n        username.length > 0 &&\n        password.length > 0 &&\n        firstName.length > 0 &&\n        lastName.length > 0\n    ) {\n        return null;\n    }\n    return \"disabled\";\n};\n\n\nconst Register = (props) => {\n    const [username, changeUsername] = useState(\"\");\n    const [password, changePassword] = useState(\"\");\n    const [firstName, changeFirstname] = useState(\"\");\n    const [lastName, changeLastname] = useState(\"\");\n    const [rePassword, changeRePassword] = useState(\"\");\n    const [emailID, changeEmailID] = useState(\"\");\n\n    return (\n        <Grid\n            container\n            alignItems=\"center\"\n            direction=\"column\"\n            justify=\"space-between\"\n            style={{ padding: 10 }}\n        >\n            <div style={{ display: 'flex', flexDirection: 'column', maxWidth: 400, minWidth: 300, padding: 50 }}>\n                <TextField\n                    value={username}\n                    onChange={(e) => changeUsername(e.target.value)}\n                    style={{ marginTop: \"1.5vh\" }}\n                    id=\"username\"\n                    label=\"Username\"\n                    InputProps={{ startAdornment: <InputAdornment position=\"start\"> <AccountCircle /> </InputAdornment> }}\n                    required\n                />\n                <TextField\n                    value={emailID}\n                    onChange={(e) => changeEmailID(e.target.value)}\n                    style={{ marginTop: \"1.5vh\" }}\n                    id=\"emailID\"\n                    label=\"Email ID\"\n                    InputProps={{ startAdornment: <InputAdornment position=\"start\"> <MailRounded /> </InputAdornment> }}\n                    required\n                />\n                <br />\n                <TextField\n                    value={firstName}\n                    onChange={(e) => changeFirstname(e.target.value)}\n                    style={{ marginTop: \"1.5vh\" }}\n                    id=\"firstName\"\n                    label=\"First Name\"\n                    InputProps={{ startAdornment: <InputAdornment position=\"start\"> <AccountCircle /> </InputAdornment> }}\n                    required\n                />\n                <br />\n                <TextField\n                    value={lastName}\n                    onChange={(e) => changeLastname(e.target.value)}\n                    style={{ marginTop: \"1.5vh\" }}\n                    id=\"lastName\"\n                    label=\"Last Name\"\n                    InputProps={{ startAdornment: <InputAdornment position=\"start\"> <AccountCircle /> </InputAdornment> }}\n                    required\n                />\n                <br />\n                <TextField\n                    value={password}\n                    onChange={(e) => changePassword(e.target.value)}\n                    type=\"password\"\n                    style={{ marginTop: \"1.5vh\" }}\n                    id=\"password\"\n                    label=\"Password\"\n                    InputProps={{ startAdornment: <InputAdornment position=\"start\"> <LockRounded /> </InputAdornment> }}\n                    required\n                />\n                <br />\n                <TextField\n                    value={rePassword}\n                    onChange={(e) => changeRePassword(e.target.value)}\n                    type=\"password\"\n                    style={{ marginTop: \"1.5vh\" }}\n                    id=\"repassword\"\n                    label=\"Retype Password\"\n                    InputProps={{ startAdornment: <InputAdornment position=\"start\"> <LockRounded /> </InputAdornment> }}\n                    required\n                />\n                <br />\n                <Button\n                    style={{ marginTop: \"1.5vh\", cursor: \"pointer\" }}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={checkRegisterForm(\n                        username,\n                        password,\n                        firstName,\n                        lastName,\n                        rePassword\n                    )}\n                    onClick={() => {\n                        let status = false;\n                        const req = {};\n                        req[\"username\"] = username;\n                        req[\"password\"] = password;\n                        req[\"firstname\"] = firstName;\n                        req[\"lastname\"] = lastName;\n                        req[\"email\"] = emailID;\n                        axios.post(`${props.url}/users/api/auth/register`, req)\n                            .then((response) => {\n                                props.change();\n                            })\n                            .catch((err) => console.log(err));\n                    }}\n                >\n                    Register\n                </Button>\n                <br />\n                <Button style={{ marginTop: \"1.5vh\" }} onClick={props.change}>\n                    Login?\n                </Button>\n            </div>\n        </Grid>\n\n    );\n};\n\nexport default Register;","/home/jijinkh/Projects/CRater/frontend/src/components/Home/HomePage.js",[],"/home/jijinkh/Projects/CRater/frontend/src/index.js",[],"/home/jijinkh/Projects/CRater/frontend/src/components/Navbar/Navbar.js",[],"/home/jijinkh/Projects/CRater/frontend/src/Creds.js",[],{"ruleId":"61","severity":1,"message":"62","line":3,"column":42,"nodeType":"63","messageId":"64","endLine":3,"endColumn":46},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"61","severity":1,"message":"69","line":3,"column":27,"nodeType":"63","messageId":"64","endLine":3,"endColumn":36},{"ruleId":"65","replacedBy":"70"},{"ruleId":"67","replacedBy":"71"},{"ruleId":"61","severity":1,"message":"72","line":117,"column":29,"nodeType":"63","messageId":"64","endLine":117,"endColumn":35},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["73"],"no-negated-in-lhs",["74"],"'useEffect' is defined but never used.",["73"],["74"],"'status' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]